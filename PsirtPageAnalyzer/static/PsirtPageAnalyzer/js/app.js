var Psirt = (function () {
    var Vulnerabilities = [];
    var MonthLabels = [
        "January",
        "February",
        "March",
        "April",
        "May",
        "June",
        "July",
        "Augest",
        "September",
        "October",
        "November",
        "December"
    ];

    init = function (document, window) {
        this.document = document;
        this.window = window;

        Chart.defaults.global.customTooltips = function (tooltip) {
            // Tooltip Element
            var tooltipEl = $('#chartjs-tooltip');
            // Hide if no tooltip
            if (!tooltip) {
                tooltipEl.css({
                    opacity: 0
                });
                return;
            }

            // Set caret Position
            tooltipEl.removeClass('above below');
            tooltipEl.addClass(tooltip.yAlign);
            // Set Text
            tooltipEl.html(tooltip.text);
            // Find Y Location on page
            var top;
            if (tooltip.yAlign == 'above') {
                top = tooltip.y - tooltip.caretHeight - tooltip.caretPadding;
            } else {
                top = tooltip.y + tooltip.caretHeight + tooltip.caretPadding;
            }
            // Display, position, and set styles for font
            tooltipEl.css({
                opacity: 1,
                left: tooltip.chart.canvas.offsetLeft + tooltip.x + 'px',
                top: tooltip.chart.canvas.offsetTop + top + 'px',
                fontFamily: tooltip.fontFamily,
                fontSize: tooltip.fontSize,
                fontStyle: tooltip.fontStyle
            });
        };
    };

    drawPieChart = function (highCount, mediumCount, lowCount) {
        var pieData = [{
            value: highCount,
            color: "#F7464A",
            highlight: "#FF5A5E",
            label: "High"
        }, {
            value: mediumCount,
            color: "#FDB45C",
            highlight: "#FFC870",
            label: "Medium"
        }, {
            value: lowCount,
            color: "#46BFBD",
            highlight: "#5AD3D1",
            label: "Low"
        }];

        var pieCtx = document.getElementById("pie-chart-area").getContext("2d");
        window.myPie = new Chart(pieCtx).Pie(pieData);
    };

    drawLineChart = function (yearLabel, trendData) {
        var data = {
            labels: MonthLabels,
            datasets: [{
                label: yearLabel,
                fillColor: "rgba(151,187,205,0.2)",
                strokeColor: "rgba(151,187,205,1)",
                pointColor: "rgba(151,187,205,1)",
                pointStrokeColor: "#fff",
                pointHighlightFill: "#fff",
                pointHighlightStroke: "rgba(151,187,205,1)",
                data: trendData
            }]
        };
        var lineCtx = document.getElementById("line-chart-area").getContext("2d");
        window.myLine = new Chart(lineCtx).Line(data, {bezierCurve: false});
    };

    drawBarChart = function (yearLabel, trendData) {
        var data = {
            labels: MonthLabels,
            datasets: [
                {
                    label: yearLabel,
                    fillColor: "rgba(151,187,205,0.5)",
                    strokeColor: "rgba(151,187,205,0.8)",
                    highlightFill: "rgba(151,187,205,0.75)",
                    highlightStroke: "rgba(151,187,205,1)",
                    data: trendData
                }
            ]
        };

        var barCtx = document.getElementById("bar-chart-area").getContext("2d");
        window.myBar = new Chart(barCtx).Bar(data);
    };


    generateTrendData = function(vuls, trendData) {

    }

    loadVulsData = function () {
        $.getJSON("api/vuls", function (vuls) {
            var highCount = 0;
            var mediumCount = 0;
            var lowCount = 0;
            var trendData = {};
            var thisYear = (new Date()).getFullYear();

            $.each(vuls, function (index) {
                var obj = JSON.parse(vuls[index]);
                Vulnerabilities.push(obj);

                if (obj.severity == 1)
                    highCount++;
                else if (obj.severity == 2)
                    mediumCount++;
                else
                    lowCount++;


                var fstPublished = new Date(obj.firstPublishedDate);
                var fullYear = fstPublished.getFullYear();
                var month = fstPublished.getMonth();
                if (trendData[fullYear] == undefined) {
                    trendData[fullYear] = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
                }
                trendData[fullYear][month]++;
            });

            drawPieChart(highCount, mediumCount, lowCount);
            drawLineChart(thisYear, _.reject(trendData[thisYear], function (num) {
                return num == 0;
            }));
        });
    };

    return this;
})();
