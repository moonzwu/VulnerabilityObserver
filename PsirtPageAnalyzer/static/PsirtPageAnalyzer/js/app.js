var Psirt = (function () {
    var Vulnerabilities = [];
    var BusinessUnits = [];
    var productCache = {};
    var SeverityMap = {
        "High" : 1,
        "Medium" : 2,
        "Low" : 3
    };


    var init = function (document, window) {
        this.document = document;
        this.window = window;
    };


    var loadVulsData = function () {
        $.getJSON("api/vuls", function (vuls) {
            var severityData = [0, 0, 0];
            var incTrendData = {};
            var updTrendData = {};
            var thisYear = (new Date()).getFullYear();

            $.each(vuls, function (index) {
                var obj = JSON.parse(vuls[index]);
                obj.cveCodes = JSON.parse(obj.cveCodes.replace(/'/g, "\""));
                Vulnerabilities.push(obj);
                severityData[obj.severity - 1]++;
            });

        });
    };

    var loadBUsData = function () {
        $.getJSON("api/bsus", function (bsus) {
            _.each(bsus, function (bu) {
                BusinessUnits.push(bu);
            });
        });
    };

    var getVulsBySeverity = function(severity) {
        return _.reject(Vulnerabilities, function(vul){
            return SeverityMap[severity] != vul.severity;
        });
    };

    var searchInCache = function(inputProductName) {
        var result = _.find(productCache, function(p) {
            var d = JSON.parse(p);
            return d.key.indexOf(inputProductName) > -1;
        });
        return result;
    };

    var search = function(inputBuName, inputProductName) {

        // check BU name
        var foundBU = _.find(BusinessUnits, function(bu){
            return bu.name == inputBuName;
        });

        if (foundBU == undefined) {
            return {"error": "No this kind of catalog '" + inputBuName + "'."};
        }

        if (inputProductName == '') {
            return {"error": "Please input one product at least."};
        }

        // find product
        var foundProduct = searchInCache(inputProductName);
        $.ajaxSettings.async = false;
        if (foundProduct == undefined) {
            $.getJSON("api/bsus/" + foundBU.key + "/products", function (buProducts) {
                var foundOne = _.find(buProducts.prodList, function (str) {
                    var product = JSON.parse(str);
                    return product.name.indexOf(inputProductName) > -1;
                });

                if (foundOne != undefined) {
                    productCache[foundOne.name] = foundOne;
                    foundProduct = JSON.parse(foundOne);
                }
            });
        }

        if (foundProduct == undefined) {
            $.ajaxSettings.async = true;
            return {"error" : "No this kind of product '" + inputProductName + "' in '" + inputBuName + "' catalog."};
        }

        // find vulnerabilities
        var foundVuls = [];
        $.getJSON("api/product/"+foundProduct.key+"/vuls", function (prodVuls) {
            if (prodVuls.vulList.length != 0) {
                foundVuls =  prodVuls.vulList;
            }
        });
        $.ajaxSettings.async = true;

        return {
            "product": foundProduct,
            "vuls": foundVuls
        };
    };

    return {
        businessUnits: BusinessUnits,
        vulnerabilities: Vulnerabilities,
        init: init,
        loadVulsData: loadVulsData,
        loadBUsData: loadBUsData,
        search:search,
        getVulsBySeverity: getVulsBySeverity
    };
})();
